{"version":3,"sources":["styles/logo.svg","ether/priceLookup.ts","ether/aggregator.ts","components/BlockSummary.tsx","components/BlockList.tsx","ether/summaryReport.ts","components/Range.tsx","components/FlowNavbar.tsx","components/Summary.tsx","components/TransferReport.tsx","components/TransferList.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","priceLookup","PriceLookup","this","price","fetchTickerPrice","setTimeout","refresh","refreshDelay","prototype","get","Promise","_a","sent","fetch","ticker","json","USD","aggregator_Aggregator","Aggregator","url","provider","providers","totalEther","begin","end","blocks","b","getBlock","block","push","toDollars","wei","ether","toEther","Object","utils","getLatestBlockNumber","getBlockNumber","getTrans","hsh","getTransaction","isContract","undefined","getCode","_super","BlockSummary","__extends","render","react_default","a","createElement","props","hash","number","transactions","length","Component","BlockList","BlockList_extends","react","Table","underscore_default","collect","blockNumber","components_BlockSummary","__assign","key","SummaryReport","aggregator","contractAddresses","receivedAddresses","sentAddresses","allAddresses","addTransaction","t","to","from","Error","add","value","addSender","addReceiver","checkAndAddContractAddress","getContractPercentage","keys","amount","transactionCount","isContractAddress","toString","displayAmountEther","toFixed","dollars","displayAmountDollars","received","c","addContractAddress","ct","addr","contractCount","Range","_this","call","state","Range_extends","componentWillReceiveProps","changedBegin","e","setState","currentTarget","changedEnd","apply","rangeChanged","changeBeginHandler","bind","changeEndHandler","applyHandler","Navbar","Form","FormGroup","InputGroup","Addon","FormControl","type","placeholder","onChange","Text","Button","onClick","FlowNavbar","FlowNavbar_extends","logoClasses","isBusy","inverse","collapseOnSelect","Header","Brand","href","src","logo_default","className","alt","Nav","pullRight","components_Range","Summary","arguments","Summary_extends","nextProps","total","report","TransferReport","TransferReport_extends","contract","address","_b","weiDisplay","lte","TransferList","TransferList_extends","componentDidMount","window","jquery","name","dataTable","i","striped","bordered","hover","condensed","map","transfers","v","k","components_TransferReport","TransferList_assign","src_App","App","defaultAggregator","aggregators","index","mainState","range","summaryReport","defaulProviderUrl","firstAggregator","providerUrl","App_extends","setRangeToLatest","latestBlock","refreshBlock","providerChanged","target","localStorage","setItem","newAggregator","createNewAggregator","console","log","App_awaiter","allTrans","underscore","blk","refreshSummary","e_1","pendingTransactions","transaction","all","skip","newState","rangeLinks","n","skipFunc","Math","pow","providerUrlHandler","beginChangeHandler","components_FlowNavbar","Grid","Row","onBlur","defaultValue","Col","md","floor","Tabs","id","Tab","eventKey","title","components_BlockList","components_TransferList","components_Summary","defaultProps","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","react_dom","getItem","document","getElementById","URL","origin","addEventListener","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f5c2997d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.802c6eac.svg\";","\nexport default class PriceLookup {\n  private static ticker : string = \"https://min-api.cryptocompare.com/data/price\"\n  private static refreshDelay : number = 1 * 60 * 1000; //\n\n  private price: Promise<number>;\n\n  public constructor() {\n    this.price = PriceLookup.fetchTickerPrice();\n    setTimeout(this.refresh, PriceLookup.refreshDelay);\n  }\n\n  public async get(): Promise<number> {\n    return await this.price;\n  }\n  \n  private refresh() {\n    this.price = PriceLookup.fetchTickerPrice();\n  }\n\n  private static async fetchTickerPrice(): Promise<number> {\n    const response = await fetch(`${PriceLookup.ticker}?fsym=ETH&tsyms=USD`);\n    const json: any = await response.json();\n\n    return json.USD;\n  }\n  \n}\n","import PriceLookup from './priceLookup';\nimport { JsonRpcProvider } from 'ethers/providers';\nimport { Block } from 'src/ether-flow';\nimport { formatEther } from 'ethers/utils';\n\nexport default class Aggregator {\n  private provider: JsonRpcProvider;\n  private price: PriceLookup;\n\n  constructor(url: string) {\n    this.provider = new JsonRpcProvider(url);\n    this.price = new PriceLookup();\n  }\n\n  public async totalEther(begin: number, end: number): Promise<Block[]> {\n    const blocks = [];\n    for(let b = begin; b !== end; ++b) {\n      const block = await this.provider.getBlock(b);\n      blocks.push(block);\n    };\n\n    return blocks;\n  }\n\n  public async toDollars(wei: string): Promise<number> {\n    const ether = this.toEther(wei);\n    \n    const price = await this.price.get();\n    \n    return price * ether;\n  }\n\n  public toEther(wei: string): number {\n    return +formatEther(wei);\n  }\n\n  public async getLatestBlockNumber(): Promise<number> {\n    return await this.provider.getBlockNumber();\n  }\n\n  public async getTrans(hsh: any) {\n    return this.provider.getTransaction(hsh);\n  }\n\n  public async isContract(hsh: string | null | undefined): Promise<string | null> {\n    if(hsh === null || hsh === undefined) {\n      return null;\n    }\n    return await this.provider.getCode(hsh);\n  }\n}\n\nexport { Aggregator }\n","import React from         'react';\nimport { Block } from '../ether-flow';\n\nexport default class BlockSummary extends React.Component<Block, {}> {\n\n  public render() {\n    return (\n      <tr>\n        <td>{this.props.hash}</td>\n        <td>{this.props.number}</td>\n        <td>{this.props.transactions.length}</td>\n      </tr>\n    )\n  }\n}\n","import * as React from 'react';\nimport { Table } from 'react-bootstrap';\nimport _ from 'underscore';\nimport BlockSummary from './BlockSummary';\nimport { Block } from '../ether-flow';\n\nexport default class BlockList extends React.Component<{blocks: Block[]}, {}> {\n\n  public render() {\n    return (\n      <Table>\n        <thead>\n          <tr>\n            <th>Block Hash</th>\n            <th>Number</th>\n            <th>Transaction Count</th>\n            <th>Uncles</th>\n          </tr>\n        </thead>\n        <tbody>\n          {_.collect(this.props.blocks, (b) => {\n            const blockNumber = b.number || 0;\n            return <BlockSummary key={blockNumber} {...b} />\n          })}\n        </tbody>\n      </Table>\n    )\n  }\n}\n","\nimport Aggregator from './aggregator';\nimport * as T from '.';\nimport { BigNumber, Transaction } from 'ethers/utils';\n\nexport default class SummaryReport {\n  public contractAddresses: object = {}\n  public receivedAddresses: T.Transfers = {}\n  public sentAddresses: T.Transfers = {}\n  public totalEther: BigNumber = new BigNumber(0)\n  public allAddresses: object = {}\n\n  private aggregator: Aggregator\n\n  constructor(aggregator: Aggregator) {\n    this.aggregator = aggregator;\n  }\n\n  public async addTransaction(t: Transaction): Promise<SummaryReport> {\n    if(t.to === null || t.to === undefined || t.from === null || t.from === undefined) {\n      throw new Error('Transaction invalid');\n    }\n    this.totalEther = this.totalEther.add(new BigNumber(t.value));\n    \n    await this.addSender(t.from, t);\n    await this.addReceiver(t.to, t);\n    this.allAddresses[t.from] = {};\n    this.allAddresses[t.to] = {};\n\n    return await this.checkAndAddContractAddress(t);\n  }\n\n  public getContractPercentage(): number {\n    return 100.0 * (Object.keys(this.contractAddresses).length / Object.keys(this.allAddresses).length);\n  }\n\n  private async addSender(from: string | undefined, t: Transaction) {\n    if(from === undefined) {\n      return;\n    }\n    const sent = this.sentAddresses[from] || {};\n  \n    sent.amount = sent.amount ? sent.amount.add(new BigNumber(t.value)) : new BigNumber(t.value);\n    sent.transactionCount = sent.transactionCount ? sent.transactionCount + 1 : 1;\n    sent.isContractAddress = sent.isContractAddress || this.contractAddresses[from] || false;\n  \n    const ether = this.aggregator.toEther(sent.amount.toString()); \n    sent.displayAmountEther = ether.toFixed(18).toString();\n    if(ether <= 0) {\n      sent.displayAmountEther = '';\n    }\n\n    const dollars = await this.aggregator.toDollars(sent.amount.toString());\n\n    sent.displayAmountDollars = dollars.toFixed(2).toString();\n    if(dollars <= 0) {\n      sent.displayAmountDollars = '';\n    }\n\n    this.sentAddresses[from] = sent;\n  }\n\n  private async addReceiver(to: string | null, t: Transaction) {\n    if(to === null) {\n      return;\n    }\n    const received = this.receivedAddresses[to] || {};\n    \n    received.amount = received.amount ? received.amount.add(new BigNumber(t.value)) : new BigNumber(t.value);\n    received.transactionCount = received.transactionCount ? received.transactionCount + 1 : 1;\n    received.isContractAddress = received.isContractAddress || this.contractAddresses[to] || false;\n    \n    const ether = this.aggregator.toEther(received.amount.toString());\n    received.displayAmountEther = ether.toFixed(18).toString();\n    if(ether <= 0) {\n      received.displayAmountEther = '';\n    }\n\n    const dollars = await this.aggregator.toDollars(received.amount.toString());\n    received.displayAmountDollars = dollars.toFixed(2).toString();\n    if(dollars <= 0) {\n      received.displayAmountDollars = '';\n    }\n\n    this.receivedAddresses[to] = received;\n  }\n\n  private async checkAndAddContractAddress(t: Transaction) : Promise<SummaryReport> {\n    const c = await this.aggregator.isContract(t.to);\n    \n    if(!(\"0x0\" === c || \"0x\" === c)) {\n      this.addContractAddress(t.to);\n    }\n    const ct = await this.aggregator.isContract(t.from);\n    if(!(\"0x0\" === ct || \"0x\" === ct)) {\n      this.addContractAddress(t.from)\n    }\n    return this;\n  }\n\n  private addContractAddress(hsh: string | null | undefined) {\n    if(hsh === null || hsh === undefined) {\n      return;\n    }\n    const addr = this.contractAddresses[hsh] = this.contractAddresses[hsh] || {};\n    addr.contractCount = addr.contractCount ? addr.contractCount + 1 : 0;\n  }\n}\n","import * as React from 'react';\nimport { FormControl, FormGroup, InputGroup, Button, Navbar } from 'react-bootstrap';\n\ninterface IRangeProps {\n  begin?: number,\n  end?: number,\n  rangeChanged?: (begin: number, end: number) => void\n}\n\ninterface IRangeState {\n  begin: number,\n  end: number\n}\n\nexport default class Range extends React.Component<IRangeProps, IRangeState> {\n  public state = {\n    begin: 0,\n    end: 49\n  }\n\n  public constructor(props: IRangeProps) {\n    super(props)\n  }\n\n  public componentWillReceiveProps(props: IRangeProps) {\n    if(props.begin) {\n      this.state.begin = props.begin\n    }\n    if(props.end) {\n      this.state.end = props.end\n    }\n  }\n\n  public changedBegin(e: React.FormEvent<HTMLInputElement>) {\n    this.setState({begin: +e.currentTarget.value});\n  }\n\n  public changedEnd(e: React.FormEvent<HTMLInputElement>) {\n    this.setState({end: +e.currentTarget.value});\n  }\n\n  public async apply() {\n    if(this.props.rangeChanged) {\n      this.props.rangeChanged(this.state.begin, this.state.end);\n    }\n  }\n\n  public render() {\n    const changeBeginHandler = this.changedBegin.bind(this);\n    const changeEndHandler = this.changedEnd.bind(this);\n    const applyHandler = this.apply.bind(this);\n\n    return (\n      <Navbar.Form>\n        <FormGroup>\n          <InputGroup>\n            <InputGroup.Addon>From</InputGroup.Addon>\n            <FormControl type=\"text\" placeholder=\"block#\" value={this.state.begin} onChange={changeBeginHandler} />\n          </InputGroup>\n        </FormGroup>\n        \n        <FormGroup>\n          <InputGroup>\n            -\n          </InputGroup>\n        </FormGroup>\n\n        <FormGroup>\n          <InputGroup>\n            <InputGroup.Addon>To</InputGroup.Addon>\n            <FormControl type=\"text\" placeholder=\"block#\" value={this.state.end} onChange={changeEndHandler} />\n          </InputGroup>\n        </FormGroup>\n\n        <FormGroup>\n          <Navbar.Text>Showing {this.state.end - this.state.begin} block</Navbar.Text>\n        </FormGroup>\n        \n        <Button onClick={applyHandler}>Apply</Button>\n      </Navbar.Form>\n    )\n  }\n}","import * as React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport '../styles/FlowNavbar.css';\nimport logo from '../styles/logo.svg';\nimport Range      from './Range';\n\ninterface IFlowBarProps {\n  isBusy: boolean,\n  begin?: number,\n  end?: number,\n  rangeChanged?: (begin: number, end: number) => void\n}\n\nexport default class FlowNavbar extends React.Component<IFlowBarProps, {}> {\n\n  public logoClasses() {\n    return this.props.isBusy ? 'App-logo' : 'App-logo-still';\n  }\n\n   public render() {\n     return (\n       <Navbar inverse={true} collapseOnSelect={true} >\n        <Navbar.Header>\n          <Navbar.Brand>\n            <a href=\"#brand\">\n              <img src={logo} className={this.logoClasses()} alt=\"logo\" />\n              &nbsp;&nbsp;EtherFlow\n            </a>\n          </Navbar.Brand>\n        </Navbar.Header>\n        <Nav pullRight={true}>\n          {this.props.begin && this.props.end && this.props.rangeChanged ? <Range rangeChanged={this.props.rangeChanged} begin={this.props.begin} end={this.props.end}/> : <Range />}\n        </Nav>\n       </Navbar>\n     );\n   }\n}\n","import React from         'react';\nimport Aggregator from    '../ether/aggregator';\nimport SummaryReport from '../ether/summaryReport';\n\nimport { Block, BigNumber } from 'src/ether-flow';\n\ninterface ISummaryState {\n  dollars: number,\n  ether: number\n}\n\nexport default class Summary extends React.Component<{total: BigNumber, aggregator: Aggregator, report: SummaryReport, blocks: Block[]}, ISummaryState> {\n  public state = {\n    dollars: 0,\n    ether: 0\n  }\n\n  public async componentWillReceiveProps(nextProps: any) {\n    if(nextProps.total !== this.props.total) {\n      const ether = this.props.aggregator.toEther(nextProps.total.toString());\n      const dollars = await this.props.aggregator.toDollars(nextProps.total.toString());\n      \n      this.setState({dollars, ether});\n    }\n  }\n\n  public render() {\n    const dollars = this.state.dollars.toFixed(2).toString();\n    const ether = this.state.ether.toString() + \" ETH\";\n\n    return (\n      <div><h3>Summary</h3>\n        Total wei {this.props.total.toString()}<br />\n        Total Ether: {ether} (${dollars})<br/>\n        {this.props.report.getContractPercentage().toFixed(2)}% were contract addresses<br/>\n        {Object.keys(this.props.report.contractAddresses).length} contracts<br/>\n        {this.props.blocks.length} Blocks\n      </div>\n    )\n  }\n}\n","import React from         'react';\nimport * as T from '../ether';\n\nexport default class TransferReport extends React.Component<T.ITransfer, {}> {\n\n  public render() {\n    let contract = \"\";\n    if(this.props.isContractAddress) {\n      contract = \" (contract)\";\n    }\n\n    const { address, amount: wei } = this.props;\n    let { displayAmountDollars: dollars, displayAmountEther: ether } = this.props;\n\n    if(dollars.length === 0) {\n      dollars = '';\n    }else{\n      dollars = `$${dollars}`;\n    }\n\n    if(ether.length === 0) {\n      ether = '';\n    }else{\n      ether = `${ether} ETH`;\n    }\n\n    let weiDisplay = wei.toString();\n    if(wei.lte(0)) {\n      weiDisplay = '';\n    }else{\n      weiDisplay = `${wei.toString()} wei`;\n    }\n\n    return (\n      <tr>\n        <td>{address}{contract}</td>\n        <td>{dollars}</td>\n        <td>{ether}</td>\n        <td>{weiDisplay}</td>\n        <td>{this.props.transactionCount}</td>\n      </tr>\n    )\n  }\n}\n","import * as React from 'react';\nimport { Table } from 'react-bootstrap';\nimport _ from 'underscore';\nimport * as T from '../ether'\nimport TransferReport from './TransferReport';\n\ndeclare global {\n  interface Window { jquery: any; }\n}\n\nexport default class TransferList extends React.Component<{name: string, transfers: T.Transfers}, {}> {\n\n  public componentDidMount() {\n    if(window.jquery) {\n      window.jquery(`#${this.props.name}`).dataTable();\n    }\n  }\n\n  public render() {\n    let i : number = 0;\n    return (\n      <Table name={this.props.name} striped bordered hover condensed>\n        <thead>\n          <tr>\n            <th>Receiver Address</th>\n            <th>Dollars</th>\n            <th>Ether</th>\n            <th>Wei</th>\n            <th>Transaction Count</th>\n          </tr>\n        </thead>\n        <tbody>\n          {_.map(this.props.transfers, (v, k) => <TransferReport key={++i} address={k} {...v} />)}\n        </tbody>\n      </Table>\n    )\n  }\n}\n","import * as React from 'react';\nimport './styles/App.css';\n\nimport { Col, Grid, Row, Tab, Tabs } from 'react-bootstrap';\n\nimport { Aggregator } from './ether/aggregator';\n\nimport * as _ from 'underscore';\n\nimport BlockList     from './components/BlockList';\nimport SummaryReport from './ether/summaryReport';\nimport FlowNavbar    from './components/FlowNavbar';\nimport Summary       from './components/Summary';\nimport TransferList  from './components/TransferList';\n\nimport { Block } from './ether-flow';\n\n\ninterface IAppProps {\n    providerUrl?: string\n}\n\ninterface IRange {\n  begin: number,\n  end: number\n}\n\ninterface IAppState {\n  aggregator: Aggregator,\n  aggregators: Aggregator[],\n  blocks: Block[],\n  index: number,\n  mainState: string,\n  range: IRange,\n  report: SummaryReport,\n  transactions: any[],\n  url: string\n}\n\n\nclass App extends React.Component<IAppProps, IAppState> {\n  public static defaulProviderUrl = 'http://localhost:4535'\n  public static defaultProps: Partial<IAppProps> = {\n    providerUrl: App.defaulProviderUrl\n  }\n  public static defaultAggregator = new Aggregator(App.defaulProviderUrl);\n  public state = {\n    aggregator: App.defaultAggregator,\n    aggregators: [],\n    blocks: [],\n    index: 0,\n    mainState: 'created',\n    range: {begin: 0, end: 49},\n    report: new SummaryReport(App.defaultAggregator),\n    transactions: [],\n    url: App.defaulProviderUrl\n  }\n\n  public constructor(props: any) {\n    super(props);\n    const firstAggregator = new Aggregator(props.providerUrl);\n    this.state.aggregator = firstAggregator;\n    if(this.props.providerUrl) {\n      this.state.url = this.props.providerUrl;\n    }\n    this.state.report = new SummaryReport(firstAggregator);\n  }\n\n  public componentDidMount() {\n    this.setRangeToLatest();\n  }\n\n  public async setRangeToLatest() {\n    const latestBlock = await this.state.aggregator.getLatestBlockNumber();\n    this.rangeChanged(latestBlock - 1, latestBlock);\n    this.refreshBlock();\n  }\n\n  public providerChanged(e: React.SyntheticEvent) {\n    const target = e.currentTarget as HTMLInputElement\n    localStorage.setItem(\"saved-provider\", target.value.toString());\n    const newAggregator = this.createNewAggregator(target.value);\n    console.log(\"Provider changed\");\n    this.setState({url: target.value, aggregator: newAggregator}, () => this.refreshBlock());\n  }\n\n  public async refreshBlock() {\n    if(this.state.mainState !== 'pending') {\n      this.setState({mainState: 'pending'}, async () => {\n        if (this.state === null || this.state.aggregator === null) { return; }\n\n        try {\n          const blocks = await this.state.aggregator.totalEther(this.state.range.begin, this.state.range.end);\n            \n          if (this.state === null || this.state.aggregator === null) { return; }\n\n          const allTrans = _.collect(blocks, (blk) => blk.transactions);\n          const transactions = _.flatten(allTrans);\n\n          this.setState({blocks, transactions, mainState: 'loaded'}, () => this.refreshSummary());\n        }catch(e) {\n          this.setState({mainState: 'error ' + e});\n        };\n      });\n    }else{\n      this.setState({mainState: 'error you cannot make multiple request simultaneously'});\n    }\n  }\n\n  public async refreshSummary() {\n    this.setState({mainState: 'pending'}, async () => {\n      if(this.state.transactions.length <= 0) {\n        this.setState({mainState: 'no transactions'});\n        return;\n      }\n\n      const pendingTransactions = _.collect(this.state.transactions, async (t) => {\n        try {\n          const transaction = await this.state.aggregator.getTrans(t);\n          const report = await this.state.report.addTransaction(transaction);\n          this.setState({report, mainState: 'loaded'});\n        }catch(e) {\n          this.setState({mainState: 'failed'});\n        };\n      });\n\n      await Promise.all(pendingTransactions);\n    });\n  }\n\n  public isBusy(): boolean {\n    return this.state.mainState === 'pending';\n  }\n\n  public skip(amount: number) {\n    const { begin, end } = this.state.range;\n    this.rangeChanged(begin+amount, end+amount);\n  }\n\n  public rangeChanged(begin: number, end: number) {\n    const newState = {\n      aggregator: this.createNewAggregator(this.state.url),\n      mainState: 'rangeChanged',\n      range: {begin, end}\n    };\n    this.setState(newState, () => this.refreshBlock())\n  }\n\n  public render() {\n    const { begin, end } = this.state.range;\n    const blocks = this.state.blocks;\n    const aggregator = this.state.aggregator;\n    const transactions =  this.state.transactions.length;\n    const rangeLinks = _.times(6,\n      (n) => {\n        const skipFunc = _.debounce(() => this.skip(Math.pow(10,n)), 100);\n        return <span key={n}>\n          <a href=\"#\" onClick={skipFunc}>Skip {Math.pow(10, n)}</a>&nbsp;|&nbsp;\n        </span>\n      });\n\n    const providerUrlHandler = this.providerChanged.bind(this);\n    const beginChangeHandler = this.rangeChanged.bind(this);\n\n    return (\n      <div>\n        <FlowNavbar isBusy={this.isBusy()} begin={begin} end={end} rangeChanged={beginChangeHandler} />\n        <Grid>\n          <Row className=\"App-intro\">\n            <label>Provider Url:\n              <input key=\"providerUrl\" onBlur={providerUrlHandler} type=\"text\" defaultValue={this.state.url}/>\n            </label>\n          </Row>\n          <Row>\n            {rangeLinks}\n          </Row>\n          <Row className=\"pull-right\">\n            <Col md={12}>\n              Loading {begin} of {end} ({Math.floor(((end-begin) / (end-begin)) * 100)}%) ({transactions} transactions) ({this.state.mainState})\n            </Col>\n          </Row>\n          <Row>\n            <Tabs id=\"Main\">\n              <Tab eventKey={1} title=\"Blocks\">\n                <BlockList blocks={blocks} />\n              </Tab>\n              <Tab eventKey={2} title={`Senders (${Object.keys(this.state.report.sentAddresses).length})`}>\n                <TransferList name=\"senders\" transfers={this.state.report.sentAddresses} />\n              </Tab>\n              <Tab eventKey={3} title={`Receivers (${Object.keys(this.state.report.receivedAddresses).length})`}>\n                <TransferList name=\"receivers\" transfers={this.state.report.receivedAddresses} />\n              </Tab>\n              <Tab eventKey={4} title=\"Transaction Summary\">\n                <Row>\n                  <Summary total={this.state.report.totalEther} blocks={this.state.blocks} aggregator={aggregator} report={this.state.report}/>\n                </Row>\n              </Tab>\n            </Tabs>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n\n  private createNewAggregator(url: string): Aggregator {\n    const newAggregator = new Aggregator(url);\n    this.setState({report: new SummaryReport(newAggregator), url});\n    return newAggregator;\n  }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\n\nimport 'bootstrap/dist/css/bootstrap-theme.css';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App providerUrl={localStorage.getItem('saved-provider') || \"http://localhost:4535\"} />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}